import asyncio
from aiogram.types import Message
from aiogram import types
from aiogram.types import InputFile
from data.config import ADMINS
from loader import dp, db, bot
from keyboards.default.settingKeyboard import admin_panel, reklama,nazad
from states.personalData import tg_id
from aiogram.dispatcher import FSMContext


@dp.message_handler(text="–†–∞—Å—Å—ã–ª–∫–∞", user_id=ADMINS)
async def send_ad_to_all(message: types.Message):
    users = await db.select_all_users()
    photo_file = "AgACAgIAAxkBAAIFhmUUR_bj0Ipe4azYDN3-0vWUe25BAALG0jEbRMqgSL_L3iwnfmPEAQADAgADeAADMAQ"
    # print(photo_file)
    
    for user in users:
        # print(user[3])
        user_id = user[3]
        await bot.send_photo(photo=photo_file, chat_id=user_id, caption="<a href = 'https://t.me/hajimeN1'>–ü–æ–¥–ø–∏—à–∏—Å—å!</a>")
        await asyncio.sleep(0.05)


# @dp.message_handler(text="/stat", user_id=ADMINS)
# async def send_statistic_to_admins(message: types.Message):
#     file1 = open("baza.txt","w")
#     users = await db.select_all_users()
#     for i in users:
#         file1.write(f"{i}\n\n")
#     count = await db.count_users()
#     with open('baza.txt', 'rb') as file1:
#         await bot.send_document(message.from_user.id, file1,caption =f"–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤ –Ω–∞—à–µ–π –±–∞–∑–µ {count} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        
   

@dp.message_handler(text="/admin", user_id=ADMINS)
async def to_admin(message: types.Message):
    await bot.send_message(message.from_user.id,text="–ó–¥–∞—Ä–æ–≤–∞ —Ö–æ–∑—è–∏–Ω)",reply_markup=admin_panel)


@dp.message_handler(text="–ë–∞–∑–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", user_id=ADMINS)
async def to_admin(message: types.Message):
    file1 = open("baza.txt","w")
    users = await db.select_all_users()
    for i in users:
        file1.write(f"{i}\n\n")
    count = await db.count_users()
    with open('baza.txt', 'rb') as file1:
   
     await bot.send_document(message.from_user.id, file1,caption =f"–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤ –Ω–∞—à–µ–π –±–∞–∑–µ {count} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")

@dp.message_handler(text='Tanish bilishüòé')
async def send_link(message: Message, state: FSMContext):
    await message.answer("–û—Ç–ø—Ä–∞–≤—å—Ç–µ telegram_id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",reply_markup = nazad)
    await tg_id.state1.set()



@dp.message_handler(state=tg_id.state1)
async def send_link(message: Message, state: FSMContext):
    
    users = await db.select_all_users()

    for i in users:
        if message.text == "–ù–∞–∑–∞–¥":
            await bot.send_message(message.from_user.id,text="–ß–µ –ø–µ—Ä–µ–¥—É–º–∞–ª?ü§£",reply_markup=admin_panel)
            await state.finish()
            break
        elif message.text == str(i[3]):
            temp = True
            break
        else: 
            temp = False
        
    if temp:
        await db.update_user_status(telegram_id = int(i[3]),status = 'VIPandsport')
        await bot.send_message(message.from_user.id,"–£—Å–ø–µ—à–Ω–æ –ø–æ–¥–∞—Ä–∏–ª–∏ –ø–æ–¥–ø–∏—Å–∫—É",reply_markup=admin_panel)
        await state.finish()
    else:
        await bot.send_message(message.from_user.id,"–¢–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ –±–∞–∑–µ",reply_markup=admin_panel)
        await state.finish()


            


@dp.message_handler(text='–ü–æ–¥–ø–∏—Å–∫–∞ ü™ì')
async def send_link(message: Message, state: FSMContext):
    await message.answer("–û—Ç–ø—Ä–∞–≤—å—Ç–µ telegram_id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",reply_markup = nazad)
    await tg_id.state2.set()

@dp.message_handler(state=tg_id.state2)
async def send_link(message: Message, state: FSMContext):
    users = await db.select_all_users()

    for i in users:
        if message.text == "–ù–∞–∑–∞–¥":
            await bot.send_message(message.from_user.id,text="–ß–µ –ø–µ—Ä–µ–¥–µ–º–∞–ª?üòè",reply_markup=admin_panel)
            await state.finish()
            break
        elif message.text == str(i[3]):
            temp = True
            break
        else: 
            temp = False
        
    if temp:
        await db.update_user_status(telegram_id = int(i[3]),status = None)
        await bot.send_message(message.from_user.id,"–£—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–∏–ª–∏ –ø–æ–¥–ø–∏—Å–∫—É",reply_markup=admin_panel)
        await state.finish()
    else:
        await bot.send_message(message.from_user.id,"–¢–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ –±–∞–∑–µ",reply_markup=admin_panel)
        await state.finish()

            




@dp.message_handler(text='–†–µ–∫–ª–∞–º–∞')
async def send_link(message: Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",reply_markup = reklama)

@dp.message_handler(text='–ù–∞–∑–∞–¥')
async def send_link(message: Message):
    await message.answer("–ù–º–∞ –≥–∞–ø —ç–Ω–¥–∏ –∞–¥–º–∏–Ω:",reply_markup = admin_panel)



@dp.message_handler(text='–°–æ–∑–¥–∞—Ç—å —Ä–µ–∫–ª–∞–º—É')
async def send_link(message: Message):
    await message.answer("–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ:",reply_markup = admin_panel)